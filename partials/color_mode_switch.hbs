<div class="color-mode-switch flex">
    <div class="toggle dark:bg-zinc-700 bg-zinc-300 relative flex items-center w-toggleMode h-toggleMode rounded-toggleMode">
        <div class="active-circle bg-primary-500 transition-left absolute rounded-full top-0 left-0 h-activeMode w-activeMode"></div>
        <div class="dark-mode z-10 shrink-0 w-mode text-center hover:cursor-pointer" style="padding-left: 1px;">
            <i class="bi bi-moon text-zinc-700 dark:text-inherit"></i>
        </div>
        <div class="light-mode z-10 shrink-0 w-mode text-center hover:cursor-pointer" style="padding-left: 1px;">
            <i class="bi bi-emoji-sunglasses text-zinc-200 dark:text-inherit"></i>
        </div>
    </div>
</div>

<script type="module">
    import reflow from "{{asset "js/reflow.js"}}";

    const activeCircle = document.querySelector('.active-circle');
    const toggle = document.querySelector('.toggle');
    const theme = localStorage.getItem('theme');
    let commentsIframe = document.getElementById("ghost-comments-root")?.querySelector("iframe");

    const prevValue = activeCircle.style.transition;
    activeCircle.style.transition = 'none';
    if (theme === 'dark') {
        activeCircle.style.left = null;
    } else {
        activeCircle.style.left = '30px';
    }
    reflow(activeCircle);
    activeCircle.style.transition = prevValue;

    toggle.addEventListener('click', () => {
        htmlEl.classList.remove("dark", "light");

        if (htmlEl.getAttribute('data-theme') === 'dark') {
            htmlEl.classList.remove("dark");
            htmlEl.classList.add("light");
            htmlEl.setAttribute('data-theme', 'light');
            activeCircle.style.left = '30px';
            localStorage.setItem('theme', 'light');
        } else {
            htmlEl.classList.add("dark");
            htmlEl.classList.remove("light");
            htmlEl.setAttribute('data-theme', 'dark');
            activeCircle.style.left = null;
            localStorage.setItem('theme', 'dark');
        }

        refreshCommentsIframe();

        if (commentsIframe) {
            const section = commentsIframe.contentWindow.document.querySelector("section");

            if (section.classList.contains("ghost-display")) {
                section.classList.remove("dark", "light");
                section.classList.add(localStorage.getItem('theme'));
            }
        }
    });

    function refreshCommentsIframe() {
        commentsIframe = document.getElementById("ghost-comments-root")?.querySelector("iframe");
    }
</script>